{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfcontosovideo"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipe_ItemsFlow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "deleteOldBlobs",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "sinkBlobItems",
								"type": "DatasetReference"
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "copyItemSQLtoBlob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "deleteOldBlobs",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [value] FROM OPENJSON(\n(Select \n   i.[ItemId]\n      ,i.[VoteCount]\n      ,i.[ProductName]\n      ,i.[ImdbId]\n      ,i.[Description]\n      ,i.[ImagePath]\n      ,i.[ThumbnailPath]\n      ,i.[UnitPrice]\n      ,i.[Popularity]\n      ,i.[OriginalLanguage]\n      ,i.[ReleaseDate]\n      ,i.[VoteAverage]\n\t  ,i.[CategoryId]\n\t  , c.[CategoryName]\n\t  \n\nFrom [dbo].[Item] i inner join Category c on i.CategoryId =c.CategoryId FOR JSON PATH)\n)",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ItemsTable",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "sinkBlobItems",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "copyItemsBlobJsonToCosmos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "copyItemSQLtoBlob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "jsonItemsBlob",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ItemsContainer",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "copyItemsBlobtoItemsByCategory",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "copyItemSQLtoBlob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "jsonItemsBlob",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "sinkItemsByCategory",
								"type": "DatasetReference"
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sinkBlobItems')]",
				"[concat(variables('factoryId'), '/datasets/ItemsTable')]",
				"[concat(variables('factoryId'), '/datasets/jsonItemsBlob')]",
				"[concat(variables('factoryId'), '/datasets/ItemsContainer')]",
				"[concat(variables('factoryId'), '/datasets/sinkItemsByCategory')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ItemsContainer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedservice_CosmosMoviesDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"ItemId": {
							"type": "integer"
						},
						"VoteCount": {
							"type": "integer"
						},
						"ProductName": {
							"type": "string"
						},
						"ImdbId": {
							"type": "integer"
						},
						"Description": {
							"type": "string"
						},
						"ImagePath": {
							"type": "string"
						},
						"ThumbnailPath": {
							"type": "null"
						},
						"UnitPrice": {
							"type": "number"
						},
						"CategoryId": {
							"type": "integer"
						},
						"Category": {
							"type": "null"
						},
						"Popularity": {
							"type": "number"
						},
						"OriginalLanguage": {
							"type": "string"
						},
						"ReleaseDate": {
							"type": "string"
						},
						"VoteAverage": {
							"type": "number"
						}
					}
				},
				"typeProperties": {
					"collectionName": "Item"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ItemsTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedservice_MoviesDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ItemId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VoteCount",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductName",
						"type": "varchar"
					},
					{
						"name": "ImdbId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Description",
						"type": "varchar"
					},
					{
						"name": "ImagePath",
						"type": "varchar"
					},
					{
						"name": "ThumbnailPath",
						"type": "varchar"
					},
					{
						"name": "UnitPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "CategoryId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Category",
						"type": "varchar"
					},
					{
						"name": "Popularity",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "OriginalLanguage",
						"type": "varchar"
					},
					{
						"name": "ReleaseDate",
						"type": "date"
					},
					{
						"name": "VoteAverage",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Item"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/jsonItemsBlob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedService_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(pipeline().RunId,'.json')",
							"type": "Expression"
						},
						"folderPath": "Items",
						"container": "moviesdb"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sinkBlobItems')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedService_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(pipeline().RunId,'.json')",
							"type": "Expression"
						},
						"folderPath": "Items",
						"container": "moviesdb"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sinkBlobOrderDetails')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedService_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(pipeline().RunId,'.json')",
							"type": "Expression"
						},
						"folderPath": "Items",
						"container": "moviesdb"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sinkItemsByCategory')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedservice_CosmosMoviesDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"typeProperties": {
					"collectionName": "ItemByCategory"
				}
			},
			"dependsOn": []
		}
	]
}